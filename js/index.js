// Практика JS 1.
// Создайте переменную с помощью camelCase, snake_case и PascalCase и присвойте им значения от 0-я до 2-х.
// Выведите значения этих переменных на экран с помощью метода alert и console.log.
// Скажите, чем кардинально отличается alert и console.log?

let fooBar = 0;
let foo_bar = 1;
let FooBar = 2;

console.log(fooBar, foo_bar, FooBar);
alert(fooBar);
alert(foo_bar);
alert(FooBar);

// Практика JS 2.
// Дана строка str = 'HTML'. Примените к ней определенный метод строк, чтобы все буквы стали маленькими.
// Выведите результат в консоль. Если есть затруднения, посмотрите, что такое методы у строк.

let str = 'HTML';
console.log(str.toLowerCase());

// Практика JS 3.
// Спросите имя пользователя с помощью метода prompt. Выведите с помощью alert сообщение 'Ваше имя {имя}'.

let userName = prompt('Ваше имя?');
alert(`Ваше имя ${userName}`);

// Практика JS 4.
// Дан массив ['Саша', 'Петя', 'Оксана'], сделайте из него ['Оксанa', 'Олег', 'Саша']. Реализуйте эту задачу, двумя способами.
// В первом исходный массив должен быть изменен, во втором - не должен быть изменен.

let arr = ['Саша', 'Петя', 'Оксана'];

// 1.
// arr[0] = 'Оксана';
// arr[1] = 'Олег';
// arr[2] = 'Саша';

// 2.
let newArr = [];

newArr.concat(arr);

newArr[0] = 'Оксана';
newArr[1] = 'Олег';
newArr[2] = 'Саша';

// Практика JS 5.
// Напишите скрипт, который принимает с клавиатуры 2 числа, и если первое больше второго, то выводит на экран их сумму,
// если же наоборот - произведение. Если числа одинаковые, выводит на экран 'числа одинаковые'.

let firstNum = +prompt('Введите первое число');
let secondNum = +prompt('Введите второе число');

firstNum > secondNum
  ? alert(firstNum + secondNum)
  : firstNum < secondNum
  ? alert(firstNum * secondNum)
  : alert('числа одинаковые');

// Практика JS 6.
// Дан массив числами, например: [10, 20, 30, 50, 235, 3000]. Выведите на экран только те числа из массива,
// которые начинаются на цифру 1, 2 или 5.

let myArr = [10, 20, 30, 50, 235, 3000];

myArr
  .filter(
    (item) =>
      item.toString()[0] === '1' ||
      item.toString()[0] === '2' ||
      item.toString()[0] === '5'
  )
  .forEach((item) => alert(item));

// Практика JS 7.
// Вес записан в переменную weight. Рекомендацию записывай строкой в переменную recommendation. Если вес до 4 кг (не включая это значение),
// рекомендация – 'Пора перекусить'. Если вес от 4 кг включительно до 5.5 кг включительно – 'Вес в норме'.Если вес больше 5.5 кг – 'Пора на тренировку'.
// В качестве условий, используй значения weight 1, 3, 4, 5, 10. Рекомендацию выводи в консоль.

const weight = +prompt('Введите вес ');
let recommendation = '';
if (weight < 4) {
  recommendation = 'Пора перекусить';
} else if (weight >= 4 && weight <= 5.5) {
  recommendation = 'Вес в норме';
} else {
  recommendation = 'Пора на тренировку';
}

console.log(recommendation);

// Практика JS 8.
// Напишите функцию, которая вычисляет итоговую оценку студента в зависимости от двух параметров:
// оценки за экзамен и количества выполненных проектов. Ваша функция должна принимать два аргумента:
// экзамен - оценка за экзамен (от 0 до 100); проекты - количество реализованных проектов (от 0 и выше);
// Эта функция должна возвращать число (итоговая оценка). Есть четыре типа итоговых оценок:
// 100, если оценка за экзамен больше 90 или количество выполненных проектов больше 10.
// 90, если оценка за экзамен больше 75 или количество выполненных проектов не менее 5.
// 75, если оценка за экзамен больше 50 или количество выполненных проектов не менее 2.
// 0, в остальных случаях

const finalGrade = (grade, amount) => {
  let res = 0;
  if (grade > 90 || amount > 10) {
    res = 100;
  } else if (grade > 75 || amount >= 5) {
    res = 90;
  } else if (grade > 50 || amount >= 2) {
    res = 75;
  }

  return res;
};

// Практика JS 9.
// Напишите функцию, которая принимает в себя массив, а возвращает произведение элементов массива, умноженных по порядку друг на друга.

const prodArrElem = (arr) => {
  return arr.reduce((a, b) => a * b, 1);
};

// Практика JS 10.
// Напишите функцию, которая будет принимать в себя массив c именами, и возвращать массив, но уже с удаленными нежелательными именами.
// Массив с нежелательными именами должен быть внутри вашей функции: const unwantedNames = [“Дима”, “Саша”, ”Ольга”, ‘Никита”].

const deleteNames = (arr) => {
  const unwantedNames = ['Дима', 'Саша', 'Ольга', 'Никита'];
  return arr.filter((item) => !unwantedNames.includes(item));
};

// Практика JS 11.
// В этом упражнении должны написать программу, которая будет принимать в качестве параметров два массива целых чисел.
// Необходимо найти произведение каждого массива, после чего найти разность двух массивов, вне зависимости, какой из них больше.
// Если напишите решение в одну строчку, будете молодцы.

const diffTwoArrays = (arr1, arr2) =>
  arr1.reduce((a, b) => a * b, 1) - arr2.reduce((a, b) => a * b, 1);

// Практика JS 12.
// Завершите функцию, которая принимает два целых числа ( a, b, где a <  b) и возвращает массив всех целых чисел между входными
// параметрами, включая их.

const getBetween = (min, max) => {
  let arr = [];
  for (let i = min; i <= max; i++) {
    arr.push(i);
  }
  return arr;
};

// Практика JS 13.
// Напишите функцию, которая преобразует шестнадцатеричное число (заданное в виде строки) в десятичное число.

const convertHexToDecimal = (hex) => {
  return parseInt(hex, 16);
};

// Практика JS 14.
// Удалите n восклицательных знаков в предложении слева направо. n - положительное целое число.

const remove = (str, n) => {
  return str.replace(/!/g, (s) => (n ? (n--, '') : s));
};

// Практика JS 15.
// Вы должны реализовать функцию, которая возвращает разницу между наибольшим и наименьшим значением в списке ,
// полученном в качестве аргумента функции. Массив, который получает функция в качестве аргумента, может содержать
// положительные и отрицательные числа. Если массив пуст или имеет одно значение, верните ноль. Изначально,
// массив будет подан в неотсортированном виде. Пример: maxDiff([1, 2, 3, -4]); // вернет 7, потому что: 3 - (-4) == 7

const maxDiff = (arr) => Math.max(...arr) - Math.min(...arr);

// Практика JS 16.
// Напишите функцию, которая принимает в себя строку и число. Верните, в виде массива, только те слова, длинна которых превышает число.

const getWords = (str, num) =>
  str
    .replace(/[!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~]/g, '')
    .split(' ')
    .filter((item) => item.length > num);

// Практика JS 17.
// Уловка, которую я изучил в начальной школе, чтобы определить, делится ли число на три, состоит в том, чтобы сложить все целые числа
// в числе и разделить полученную сумму на три. Если от деления суммы на три нет остатка, то исходное число также делится на три.
// Учитывая серию цифр в виде строки, определите, делится ли число, представленное строкой, на три. Примечание: Старайтесь избегать
// использования оператора % (остаток от деления). Число, которое будет принимать в себя функция - всегда будет строка.

const divisibleByThree = (str) =>
  Number.isInteger(str.split('').reduce((a, b) => +a + +b, 0) / 3);

// Практика JS 18.
// Никаких разговоров. Никаких объяснений. Только ТЗ и результат, который должен быть.
// Посмотрите, что должно получиться на выходе и напишите эту функцию.
// Пример кода:
//    spacey(['kevin', 'has','no','space']) => [ 'kevin', 'kevinhas', 'kevinhasno', 'kevinhasnospace']
//    spacey(['this','cheese','has','no','holes']) => ['this','thischeese','thischeesehas','thischeesehasno','thischeesehasnoholes']

// Практика JS 19.
// Если число четное, преобразуйте его в двоичное. Если число нечетное, преобразуйте его в шестнадцатеричное.

const evensAndOdds = (n) => (n % 2 === 0 ? n.toString(2) : n.toString(16));

// Практика JS 20.
// Необходимо реализовать функцию, которая на входе принимает массив с разными типами данных ==> ['a', 1, 2, false, 'b'],
// а возвращает объект, в котором эти типы данных рассортированны по ключам.

const createObj = (arr) => {
  let keysArr = [...new Set(arr.map((item) => typeof item))];
  let resObj = {};

  for (let i = 0; i < keysArr.length; i++) {
    resObj[keysArr[i]] = [];
  }

  for (let i = 0; i < arr.length; i++) {
    resObj[typeof arr[i]].push(arr[i]);
  }

  return resObj;
};

// Практика JS 21.
// Дана строка, состоящяя из букв a,b,c. Ваша задача поменять расположение букв a и b, но не трогать c.

const switcheroo = (str) => {
  return str
    .split('')
    .map((item) => {
      if (item === 'a') {
        item = 'b';
      } else if (item === 'b') {
        item = 'a';
      } else {
        return item;
      }

      return item;
    })
    .join('');
};
